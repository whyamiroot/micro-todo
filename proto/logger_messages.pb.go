// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logger_messages.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Severity_Severity int32

const (
	Severity_DEBUG Severity_Severity = 0
	Severity_INFO  Severity_Severity = 1
	Severity_WARN  Severity_Severity = 2
	Severity_ERROR Severity_Severity = 3
	Severity_FATAL Severity_Severity = 4
)

var Severity_Severity_name = map[int32]string{
	0: "DEBUG",
	1: "INFO",
	2: "WARN",
	3: "ERROR",
	4: "FATAL",
}
var Severity_Severity_value = map[string]int32{
	"DEBUG": 0,
	"INFO":  1,
	"WARN":  2,
	"ERROR": 3,
	"FATAL": 4,
}

func (x Severity_Severity) String() string {
	return proto1.EnumName(Severity_Severity_name, int32(x))
}
func (Severity_Severity) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type LoggerResponse_Code int32

const (
	LoggerResponse___DEFAULT       LoggerResponse_Code = 0
	LoggerResponse_OK              LoggerResponse_Code = 1
	LoggerResponse_SERVICE_FAIL    LoggerResponse_Code = 2
	LoggerResponse_NOT_AUTHORIZED  LoggerResponse_Code = 3
	LoggerResponse_SERVICE_UNKNOWN LoggerResponse_Code = 4
)

var LoggerResponse_Code_name = map[int32]string{
	0: "__DEFAULT",
	1: "OK",
	2: "SERVICE_FAIL",
	3: "NOT_AUTHORIZED",
	4: "SERVICE_UNKNOWN",
}
var LoggerResponse_Code_value = map[string]int32{
	"__DEFAULT":       0,
	"OK":              1,
	"SERVICE_FAIL":    2,
	"NOT_AUTHORIZED":  3,
	"SERVICE_UNKNOWN": 4,
}

func (x LoggerResponse_Code) String() string {
	return proto1.EnumName(LoggerResponse_Code_name, int32(x))
}
func (LoggerResponse_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4, 0} }

type Severity struct {
	Level Severity_Severity `protobuf:"varint,1,opt,name=level,enum=proto.Severity_Severity" json:"level,omitempty"`
}

func (m *Severity) Reset()                    { *m = Severity{} }
func (m *Severity) String() string            { return proto1.CompactTextString(m) }
func (*Severity) ProtoMessage()               {}
func (*Severity) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Severity) GetLevel() Severity_Severity {
	if m != nil {
		return m.Level
	}
	return Severity_DEBUG
}

type LogEntry struct {
	Severity     *Severity `protobuf:"bytes,1,opt,name=severity" json:"severity,omitempty"`
	Type         string    `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Index        int32     `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	TimestampUTC uint64    `protobuf:"varint,4,opt,name=timestampUTC" json:"timestampUTC,omitempty"`
	Message      string    `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	Signature    string    `protobuf:"bytes,6,opt,name=signature" json:"signature,omitempty"`
}

func (m *LogEntry) Reset()                    { *m = LogEntry{} }
func (m *LogEntry) String() string            { return proto1.CompactTextString(m) }
func (*LogEntry) ProtoMessage()               {}
func (*LogEntry) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *LogEntry) GetSeverity() *Severity {
	if m != nil {
		return m.Severity
	}
	return nil
}

func (m *LogEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LogEntry) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LogEntry) GetTimestampUTC() uint64 {
	if m != nil {
		return m.TimestampUTC
	}
	return 0
}

func (m *LogEntry) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *LogEntry) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type Constraint struct {
	FromLogIndex uint64 `protobuf:"varint,1,opt,name=fromLogIndex" json:"fromLogIndex,omitempty"`
	ToLogIndex   uint64 `protobuf:"varint,2,opt,name=toLogIndex" json:"toLogIndex,omitempty"`
}

func (m *Constraint) Reset()                    { *m = Constraint{} }
func (m *Constraint) String() string            { return proto1.CompactTextString(m) }
func (*Constraint) ProtoMessage()               {}
func (*Constraint) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Constraint) GetFromLogIndex() uint64 {
	if m != nil {
		return m.FromLogIndex
	}
	return 0
}

func (m *Constraint) GetToLogIndex() uint64 {
	if m != nil {
		return m.ToLogIndex
	}
	return 0
}

type ConstraintedLogRequest struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	// Types that are valid to be assigned to Contraint:
	//	*ConstraintedLogRequest_LastNLogs
	//	*ConstraintedLogRequest_FromToConstraint
	Contraint isConstraintedLogRequest_Contraint `protobuf_oneof:"contraint"`
	Signature string                             `protobuf:"bytes,5,opt,name=signature" json:"signature,omitempty"`
}

func (m *ConstraintedLogRequest) Reset()                    { *m = ConstraintedLogRequest{} }
func (m *ConstraintedLogRequest) String() string            { return proto1.CompactTextString(m) }
func (*ConstraintedLogRequest) ProtoMessage()               {}
func (*ConstraintedLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type isConstraintedLogRequest_Contraint interface {
	isConstraintedLogRequest_Contraint()
}

type ConstraintedLogRequest_LastNLogs struct {
	LastNLogs uint64 `protobuf:"varint,3,opt,name=lastNLogs,oneof"`
}
type ConstraintedLogRequest_FromToConstraint struct {
	FromToConstraint *Constraint `protobuf:"bytes,4,opt,name=fromToConstraint,oneof"`
}

func (*ConstraintedLogRequest_LastNLogs) isConstraintedLogRequest_Contraint()        {}
func (*ConstraintedLogRequest_FromToConstraint) isConstraintedLogRequest_Contraint() {}

func (m *ConstraintedLogRequest) GetContraint() isConstraintedLogRequest_Contraint {
	if m != nil {
		return m.Contraint
	}
	return nil
}

func (m *ConstraintedLogRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ConstraintedLogRequest) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ConstraintedLogRequest) GetLastNLogs() uint64 {
	if x, ok := m.GetContraint().(*ConstraintedLogRequest_LastNLogs); ok {
		return x.LastNLogs
	}
	return 0
}

func (m *ConstraintedLogRequest) GetFromToConstraint() *Constraint {
	if x, ok := m.GetContraint().(*ConstraintedLogRequest_FromToConstraint); ok {
		return x.FromToConstraint
	}
	return nil
}

func (m *ConstraintedLogRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConstraintedLogRequest) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _ConstraintedLogRequest_OneofMarshaler, _ConstraintedLogRequest_OneofUnmarshaler, _ConstraintedLogRequest_OneofSizer, []interface{}{
		(*ConstraintedLogRequest_LastNLogs)(nil),
		(*ConstraintedLogRequest_FromToConstraint)(nil),
	}
}

func _ConstraintedLogRequest_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*ConstraintedLogRequest)
	// contraint
	switch x := m.Contraint.(type) {
	case *ConstraintedLogRequest_LastNLogs:
		b.EncodeVarint(3<<3 | proto1.WireVarint)
		b.EncodeVarint(uint64(x.LastNLogs))
	case *ConstraintedLogRequest_FromToConstraint:
		b.EncodeVarint(4<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.FromToConstraint); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConstraintedLogRequest.Contraint has unexpected type %T", x)
	}
	return nil
}

func _ConstraintedLogRequest_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*ConstraintedLogRequest)
	switch tag {
	case 3: // contraint.lastNLogs
		if wire != proto1.WireVarint {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Contraint = &ConstraintedLogRequest_LastNLogs{x}
		return true, err
	case 4: // contraint.fromToConstraint
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(Constraint)
		err := b.DecodeMessage(msg)
		m.Contraint = &ConstraintedLogRequest_FromToConstraint{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConstraintedLogRequest_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*ConstraintedLogRequest)
	// contraint
	switch x := m.Contraint.(type) {
	case *ConstraintedLogRequest_LastNLogs:
		n += proto1.SizeVarint(3<<3 | proto1.WireVarint)
		n += proto1.SizeVarint(uint64(x.LastNLogs))
	case *ConstraintedLogRequest_FromToConstraint:
		s := proto1.Size(x.FromToConstraint)
		n += proto1.SizeVarint(4<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type LoggerResponse struct {
	Status LoggerResponse_Code `protobuf:"varint,1,opt,name=status,enum=proto.LoggerResponse_Code" json:"status,omitempty"`
}

func (m *LoggerResponse) Reset()                    { *m = LoggerResponse{} }
func (m *LoggerResponse) String() string            { return proto1.CompactTextString(m) }
func (*LoggerResponse) ProtoMessage()               {}
func (*LoggerResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *LoggerResponse) GetStatus() LoggerResponse_Code {
	if m != nil {
		return m.Status
	}
	return LoggerResponse___DEFAULT
}

type SignedServiceInfo struct {
	Type      string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Index     int32  `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *SignedServiceInfo) Reset()                    { *m = SignedServiceInfo{} }
func (m *SignedServiceInfo) String() string            { return proto1.CompactTextString(m) }
func (*SignedServiceInfo) ProtoMessage()               {}
func (*SignedServiceInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SignedServiceInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SignedServiceInfo) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SignedServiceInfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type LogEntriesCount struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Count uint64 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *LogEntriesCount) Reset()                    { *m = LogEntriesCount{} }
func (m *LogEntriesCount) String() string            { return proto1.CompactTextString(m) }
func (*LogEntriesCount) ProtoMessage()               {}
func (*LogEntriesCount) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *LogEntriesCount) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LogEntriesCount) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LogEntriesCount) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto1.RegisterType((*Severity)(nil), "proto.Severity")
	proto1.RegisterType((*LogEntry)(nil), "proto.LogEntry")
	proto1.RegisterType((*Constraint)(nil), "proto.Constraint")
	proto1.RegisterType((*ConstraintedLogRequest)(nil), "proto.ConstraintedLogRequest")
	proto1.RegisterType((*LoggerResponse)(nil), "proto.LoggerResponse")
	proto1.RegisterType((*SignedServiceInfo)(nil), "proto.SignedServiceInfo")
	proto1.RegisterType((*LogEntriesCount)(nil), "proto.LogEntriesCount")
	proto1.RegisterEnum("proto.Severity_Severity", Severity_Severity_name, Severity_Severity_value)
	proto1.RegisterEnum("proto.LoggerResponse_Code", LoggerResponse_Code_name, LoggerResponse_Code_value)
}

func init() { proto1.RegisterFile("logger_messages.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xdd, 0x8e, 0xd2, 0x40,
	0x14, 0xc7, 0x99, 0xd2, 0x22, 0x3d, 0xbb, 0xee, 0xce, 0x8e, 0xab, 0x69, 0x8c, 0xd9, 0x90, 0x5e,
	0x91, 0x98, 0x70, 0x81, 0x0f, 0xb0, 0xe9, 0x42, 0x91, 0x66, 0x9b, 0x56, 0x87, 0xe2, 0x1a, 0xbd,
	0x20, 0x15, 0x66, 0x9b, 0x26, 0xd0, 0xc1, 0xce, 0x40, 0x24, 0xbe, 0x8b, 0x6f, 0xe2, 0x2b, 0xf8,
	0x4c, 0xa6, 0xd3, 0xf2, 0xa9, 0x37, 0x7b, 0xd5, 0xf3, 0xf1, 0xeb, 0xf9, 0xf8, 0xcf, 0x81, 0x97,
	0x73, 0x9e, 0x24, 0x2c, 0x9f, 0x2c, 0x98, 0x10, 0x71, 0xc2, 0x44, 0x67, 0x99, 0x73, 0xc9, 0x89,
	0xa1, 0x3e, 0xf6, 0x4f, 0x68, 0x8e, 0xd8, 0x9a, 0xe5, 0xa9, 0xdc, 0x90, 0x0e, 0x18, 0x73, 0xb6,
	0x66, 0x73, 0x0b, 0xb5, 0x50, 0xfb, 0xa2, 0x6b, 0x95, 0x64, 0x67, 0x9b, 0xdf, 0x19, 0xb4, 0xc4,
	0xec, 0xdb, 0x83, 0x7f, 0x4d, 0x30, 0xfa, 0xee, 0xdd, 0xf8, 0x3d, 0xae, 0x91, 0x26, 0xe8, 0x5e,
	0x30, 0x08, 0x31, 0x2a, 0xac, 0x07, 0x87, 0x06, 0x58, 0x2b, 0xd2, 0x2e, 0xa5, 0x21, 0xc5, 0xf5,
	0xc2, 0x1c, 0x38, 0x91, 0xe3, 0x63, 0xdd, 0xfe, 0x8d, 0xa0, 0xe9, 0xf3, 0xc4, 0xcd, 0x64, 0xbe,
	0x21, 0x6f, 0xa1, 0x29, 0xaa, 0x6a, 0x6a, 0x80, 0xb3, 0xee, 0xe5, 0xc9, 0x00, 0x74, 0x07, 0x10,
	0x02, 0xba, 0xdc, 0x2c, 0x99, 0xa5, 0xb5, 0x50, 0xdb, 0xa4, 0xca, 0x26, 0xd7, 0x60, 0xa4, 0xd9,
	0x8c, 0xfd, 0xb0, 0xea, 0x2d, 0xd4, 0x36, 0x68, 0xe9, 0x10, 0x1b, 0xce, 0x65, 0xba, 0x60, 0x42,
	0xc6, 0x8b, 0xe5, 0x38, 0xea, 0x59, 0x7a, 0x0b, 0xb5, 0x75, 0x7a, 0x14, 0x23, 0x16, 0x3c, 0xab,
	0xd4, 0xb1, 0x0c, 0x55, 0x70, 0xeb, 0x92, 0x37, 0x60, 0x8a, 0x34, 0xc9, 0x62, 0xb9, 0xca, 0x99,
	0xd5, 0x50, 0xb9, 0x7d, 0xc0, 0xfe, 0x00, 0xd0, 0xe3, 0x99, 0x90, 0x79, 0x9c, 0x66, 0xb2, 0xe8,
	0xf4, 0x98, 0xf3, 0x85, 0xcf, 0x13, 0x4f, 0x8d, 0x81, 0xca, 0x4e, 0x87, 0x31, 0x72, 0x03, 0x20,
	0xf9, 0x8e, 0xd0, 0x14, 0x71, 0x10, 0xb1, 0xff, 0x20, 0x78, 0xb5, 0x2f, 0xc9, 0x66, 0x3e, 0x4f,
	0x28, 0xfb, 0xbe, 0x62, 0x42, 0xee, 0x56, 0x46, 0xff, 0x5b, 0x59, 0x3b, 0x5c, 0xf9, 0x06, 0xcc,
	0x79, 0x2c, 0x64, 0xe0, 0xf3, 0x44, 0x28, 0x31, 0xf4, 0x61, 0x8d, 0xee, 0x43, 0xe4, 0x16, 0x70,
	0x31, 0x54, 0xc4, 0xf7, 0x9d, 0x94, 0x2c, 0x67, 0xdd, 0xab, 0x4a, 0xf1, 0x7d, 0x62, 0x58, 0xa3,
	0xff, 0xc0, 0xc7, 0xaa, 0x18, 0x27, 0xaa, 0xdc, 0x9d, 0x81, 0x39, 0xe5, 0x59, 0x89, 0xda, 0xbf,
	0x10, 0x5c, 0xf8, 0xea, 0x00, 0x29, 0x13, 0x4b, 0x9e, 0x09, 0x46, 0xba, 0xd0, 0x10, 0x32, 0x96,
	0x2b, 0x51, 0xdd, 0xd9, 0xeb, 0xaa, 0xe9, 0x31, 0xd6, 0xe9, 0xf1, 0x19, 0xa3, 0x15, 0x69, 0x7f,
	0x06, 0xbd, 0xf0, 0xc9, 0x73, 0x30, 0x27, 0x93, 0xbe, 0x3b, 0x70, 0xc6, 0x7e, 0x84, 0x6b, 0xa4,
	0x01, 0x5a, 0x78, 0x8f, 0x11, 0xc1, 0x70, 0x3e, 0x72, 0xe9, 0x27, 0xaf, 0xe7, 0x4e, 0x06, 0x8e,
	0xe7, 0x63, 0x8d, 0x10, 0xb8, 0x08, 0xc2, 0x68, 0xe2, 0x8c, 0xa3, 0x61, 0x48, 0xbd, 0x2f, 0x6e,
	0x1f, 0xd7, 0xc9, 0x0b, 0xb8, 0xdc, 0x52, 0xe3, 0xe0, 0x3e, 0x08, 0x1f, 0x02, 0xac, 0xdb, 0x5f,
	0xe1, 0x6a, 0x94, 0x26, 0x19, 0x9b, 0x8d, 0x58, 0xbe, 0x4e, 0xa7, 0xcc, 0xcb, 0x1e, 0xf9, 0x13,
	0xb4, 0x3e, 0x92, 0xa2, 0x7e, 0x7a, 0x20, 0x1f, 0xe1, 0xb2, 0xba, 0xef, 0x94, 0x89, 0x1e, 0x5f,
	0x65, 0x4f, 0x79, 0xc6, 0x6b, 0x30, 0xa6, 0xc5, 0x2f, 0xe5, 0x13, 0xd2, 0xd2, 0xf9, 0xd6, 0x50,
	0x62, 0xbd, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x61, 0xb3, 0x09, 0xd7, 0x03, 0x00, 0x00,
}
