syntax = "proto3";

package proto;

/*****************************
 * Registry service protocol *
 *****************************
 */

message ServiceType {
    string type = 1;
}

message ServiceTypesList {
    repeated ServiceType types = 1;
}

/* RegistryResponse represents response from Registry service
 * It contains status code and optional message
 */
message RegistryResponse {
    enum Code {
        __DEFAULT = 0;
        OK = 1;
        INVALID = 2; // Signature is invalid
        FAIL = 3; // Internal error
        CANCELED = 4; // Action cancelled on server
        NOT_IMPLEMENTED = 5; // Health route is not responding
        NULL = 6; // No service is received
        EXISTS = 7; // Service is already registered
    }

    Code status = 1;
    string message = 2;
    uint32 service_index = 3;
}

message Service {
    string proto = 1;
    string type = 2;
    string host = 3;
    uint32 port = 4;
    string health = 5;
    uint32 weight = 6;
}

message ServiceList {
    repeated Service services = 1;
}

message ServiceInfo {
    string type = 1;
    uint32 index = 2;
}

message InstanceInfo {
    string instanceName = 1;
}
